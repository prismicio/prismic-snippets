<templateSet group="Vue">
	<template
	name="prismicSliceScaffold"
	value="&lt;template&gt;&#10;	$1$&#10;&lt;/template&gt;&#10;&#10;&lt;script&gt;&#10;import { getSliceComponentProps } from &quot;@prismicio/vue/components&quot;;&#10;&#10;export default {&#10;  // The array passed to `getSliceComponentProps` is purely optional.&#10;	// Consider it as a visual hint for you when templating your slice.&#10;  props: getSliceComponentProps([&quot;slice&quot;, &quot;index&quot;, &quot;slices&quot;, &quot;context&quot;])&#10;}&#10;&lt;/script&gt;"
	description="Yields a ready-to-use Slice components scaffold"
	toReformat="true"
	toShortenFQNames="true"
><variable name="1" expression="" defaultValue="" alwaysStopAt="true"/>
	<context>
		<option name="VUE" value="true"/>
	</context>
</template>
<template
	name="prismicSliceSimulatorScaffold"
	value="&lt;template&gt;&#10;	&lt;SliceSimulator :state=&quot;state&quot; #default=&quot;{ slices }&quot;&gt;&#10;		&lt;SliceZone :slices=&quot;slices&quot; :components=&quot;components&quot; /&gt;&#10;	&lt;/SliceSimulator&gt;&#10;&lt;/template&gt;&#10;&#10;&lt;script&gt;&#10;import { SliceSimulator } from &quot;@prismicio/slice-simulator-vue&quot;;&#10;&#10;import state from &quot;~~/.slicemachine/libraries-state.json&quot;;&#10;// A component map mapping Prismic slice types to Vue components&#10;import components from &quot;$1$&quot;;&#10;&#10;export default {&#10;	components: {&#10;		SliceSimulator,&#10;		SliceZone,&#10;	},&#10;	data() {&#10;		return { state, components };&#10;	},&#10;};&#10;&lt;/script&gt;"
	description="Yields a ready-to-use Slice Simulator scaffold"
	toReformat="true"
	toShortenFQNames="true"
>
	<variable name="1" expression="enum(&quot;~~/slices/components&quot;)" defaultValue="~~/slices/components" alwaysStopAt="true"/>
	<context>
		<option name="VUE" value="true"/>
	</context>
</template>
</templateSet>