{
	"Prismic Group": {
		"scope": "javascript",
		"prefix": "prismicGroup",
		"description": "Yields a ready-to-use Group field/Slice repeatable template",
		"body": [
			"{${1:slice.items}.map((${2:item}) => (",
			"\t<${3:div} key={${2:item}}>",
			"\t\t{{ ${2:item} }}${4}",
			"\t</${3:div}>",
			"))}"
		]
	},
	"Prismic HTML Serializer Scaffold": {
		"scope": "javascript",
		"prefix": "prismicHTMLSerializerScaffold",
		"description": "Yields a ready-to-use HTML Serializer scaffold",
		"body": [
			"/**",
			" * @type {import(\"@prismicio/helpers\").HTMLMapSerializer}",
			" */",
			"const htmlSerializer = {",
			"\t// Those are just examples, update them and add your own~",
			"\theading1: ({ children }) => `<h2>\\${children}</h2>`,",
			"\tparagraph: ({ children }) => `<p class=\"fooBar\">\\${children}</p>`,",
			"};"
		]
	},
	"Prismic Link": {
		"scope": "javascript",
		"prefix": "prismicLink",
		"description": "Yields a ready-to-use `<PrismicLink />` component",
		"body": [
			"<PrismicLink field={${1:doc.data.field}}>",
			"\t${2}",
			"</PrismicLink>"
		]
	},
	"Prismic Link Resolver Scaffold": {
		"scope": "javascript",
		"prefix": "prismicLinkResolverScaffold",
		"description": "Yields a ready-to-use Link Resolver scaffold",
		"body": [
			"/**",
			" * @type {import(\"@prismicio/helpers\").LinkResolverFunction}",
			" */",
			"const linkResolver = (doc) => {",
			"\tif (doc.isBroken) {",
			"\t\treturn \"/404\";",
			"\t}",
			"",
			"\tif (doc.type === \"${1:page}\") {",
			"\t\treturn `/${${2:doc.uid}}`;",
			"\t}",
			"};"
		]
	},
	"Prismic Provider": {
		"scope": "javascript",
		"prefix": "prismicProvider",
		"description": "Yields a ready-to-use `<PrismicProvider />` component",
		"body": [
			"<PrismicProvider client={${1:client}}>",
			"\t{children}${2}",
			"</PrismicProvider>"
		]
	},
	"Prismic Rich Text": {
		"scope": "javascript",
		"prefix": "prismicRichText",
		"description": "Yields a ready-to-use `<PrismicRichText />` component",
		"body": [
			"<PrismicRichText field={${1:doc.data.field}} />"
		]
	},
	"Prismic Route Resolver Scaffold": {
		"scope": "javascript",
		"prefix": "prismicRouteResolverScaffold",
		"description": "Yields a ready-to-use Route Resolver scaffold",
		"body": [
			"[",
			"\t{",
			"\t\ttype: \"${1:page}\",",
			"\t\tpath: \"${2:path}\",",
			"\t\t// resolver: {",
			"\t\t// \tparent: \"${4:parent_page}\",",
			"\t\t// }",
			"\t}",
			"]"
		]
	},
	"Prismic Slice Scaffold": {
		"scope": "javascript",
		"prefix": "prismicSliceScaffold",
		"description": "Yields a ready-to-use Slice components scaffold",
		"body": [
			"export default function ${1:SliceName}(",
			"\t/**",
			"\t * @type {import(\"@prismicio/react\").SliceComponentProps}",
			"\t */",
			"\t{ slice }",
			") {",
			"  return (${2});",
			"};"
		]
	},
	"Prismic Slice Simulator Scaffold": {
		"scope": "javascript",
		"prefix": "prismicSliceSimulatorScaffold",
		"description": "Yields a ready-to-use Slice Simulator scaffold",
		"body": [
			"import { SliceSimulator } from \"@prismicio/slice-simulator-react\";",
			"import { SliceZone } from \"@prismicio/react\";",
			"",
			"import state from \"../.slicemachine/libraries-state.json\";",
			"// A component map mapping Prismic slice types to React components",
			"import { components } from \"${1:../slices/components}\";",
			"",
			"const SliceSimulatorPage = () => {",
			"  return (",
			"    <SliceSimulator",
			"      sliceZone={({ slices }) => (",
			"        <SliceZone slices={slices} components={components} />",
			"      )}",
			"      state={state}",
			"    />",
			"  );",
			"};",
			"",
			"export default SliceSimulatorPage;"
		]
	},
	"Prismic SliceZone": {
		"scope": "javascript",
		"prefix": "prismicSliceZone",
		"description": "Yields a ready-to-use `<SliceZone />` component",
		"body": [
			"<SliceZone slices={${1:doc.data.body}} components={${2:components}} />"
		]
	},
	"Prismic Text": {
		"scope": "javascript",
		"prefix": "prismicText",
		"description": "Yields a ready-to-use `<PrismicText />` component",
		"body": [
			"<PrismicText field={${1:doc.data.field}} />"
		]
	},
	"Prismic Toolbar": {
		"scope": "javascript",
		"prefix": "prismicToolbar",
		"description": "Yields a ready-to-use `<PrismicToolbar />` component",
		"body": [
			"<PrismicToolbar repositoryName=\"${1:repo-name}\" />"
		]
	}
}
